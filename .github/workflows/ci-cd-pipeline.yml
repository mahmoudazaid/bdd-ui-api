name: BDD UI-API Framework CI/CD Pipeline

# Permissions required for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Ensure only one Pages deployment runs at a time
concurrency:
  group: "pages"
  cancel-in-progress: true

# Trigger pipeline on push to master branch and pull requests
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    # Run daily at 2:00 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual trigger

# Environment variables
env:
  MAVEN_OPTS: -Dfile.encoding=UTF-8
  JAVA_OPTS: -Xmx2g -XX:+TieredCompilation -XX:TieredStopAtLevel=1

# Jobs configuration
jobs:
  # API Tests Job
  api-tests:
    name: 🔌 API Tests
    runs-on: ubuntu-latest
    env:
      API_AUTH_TOKEN: ${{ secrets.API_AUTH_TOKEN }}
    
    steps:
      # Checkout code
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      # Setup Java 19
      - name: ☕ Setup Java 19
        uses: actions/setup-java@v4
        with:
          java-version: '19'
          distribution: 'temurin'
          cache: 'maven'
          
      # Cache Maven dependencies
      - name: 📦 Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      # Display versions
      - name: ℹ️ Display versions
        run: |
          echo "🔍 Environment Information:"
          echo "=========================="
          echo "Java version:"
          java -version
          echo ""
          echo "Maven version:"
          mvn -version
          echo ""
          echo "Current directory:"
          pwd
          
      # Compile project
      - name: 🔨 Compile project
        run: mvn clean compile test-compile -q
        
      # Run API tests
      - name: 🧪 Run API tests
        run: mvn clean test -Dtest=APICucumberRunner -Dapi.auth.token=${API_AUTH_TOKEN} -q

      # Upload Allure results (if any)
      - name: 📦 Upload Allure results (API)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-api
          path: allure-results/
          if-no-files-found: ignore
        
      # Upload API test results
      - name: 📤 Upload API test results
        uses: actions/upload-artifact@v4
        with:
          name: api-test-results
          path: |
            target/cucumber-reports/
            target/surefire-reports/
          retention-days: 30
          
      # Upload API HTML report
      - name: 📊 Upload API HTML report
        uses: actions/upload-artifact@v4
        with:
          name: api-html-report
          path: target/cucumber-reports/api-cucumber.html
          retention-days: 30

  # UI Tests Job
  ui-tests:
    name: 🖥️ UI Tests
    runs-on: ubuntu-latest
    env:
      API_AUTH_TOKEN: ${{ secrets.API_AUTH_TOKEN }}
    
    steps:
      # Checkout code
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      # Setup Java 19
      - name: ☕ Setup Java 19
        uses: actions/setup-java@v4
        with:
          java-version: '19'
          distribution: 'temurin'
          cache: 'maven'
          
      # Cache Maven dependencies
      - name: 📦 Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      # Display versions
      - name: ℹ️ Display versions
        run: |
          echo "🔍 Environment Information:"
          echo "=========================="
          echo "Java version:"
          java -version
          echo ""
          echo "Maven version:"
          mvn -version
          echo ""
          echo "Current directory:"
          pwd
          
      # Compile project
      - name: 🔨 Compile project
        run: mvn clean compile test-compile -q
        
      # Run UI tests
      - name: 🧪 Run UI tests
        run: mvn clean test -Dtest=UICucumberRunner -q

      # Upload Allure results (if any)
      - name: 📦 Upload Allure results (UI)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-ui
          path: allure-results/
          if-no-files-found: ignore
        
      # Upload UI test results
      - name: 📤 Upload UI test results
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-results
          path: |
            target/cucumber-reports/
            target/surefire-reports/
          retention-days: 30
          
      # Upload UI HTML report
      - name: 📊 Upload UI HTML report
        uses: actions/upload-artifact@v4
        with:
          name: ui-html-report
          path: target/cucumber-reports/ui-cucumber.html
          retention-days: 30

  # Summary Job
  summary:
    name: 📋 Test Summary
    runs-on: ubuntu-latest
    needs: [api-tests, ui-tests]
    if: always()
    
    steps:
      # Checkout code
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      # Download all test artifacts
      - name: 📥 Download test artifacts
        uses: actions/download-artifact@v4
        with:
          path: test-artifacts
          
      # Create summary report
      - name: 📋 Create summary report
        run: |
          cat << EOF > test-summary.md
          # 🚀 BDD UI-API Framework Test Summary
          
          ## 🎯 Pipeline Status
          - **API Tests**: ${{ needs.api-tests.result }}
          - **UI Tests**: ${{ needs.ui-tests.result }}
          - **Overall**: ${{ (needs.api-tests.result == 'success' && needs.ui-tests.result == 'success') && '✅ PASSED' || '❌ FAILED' }}
          
          ## 📊 Test Results
          - **API Tests**: Available in \`api-test-results\` artifact
          - **UI Tests**: Available in \`ui-test-results\` artifact
          
          ## 📄 HTML Reports
          - **API Report**: \`api-html-report\` artifact
          - **UI Report**: \`ui-html-report\` artifact
          
          ## 🔗 Artifacts
          All test results and reports are available for download in the workflow artifacts.
          
          **Commit**: ${{ github.sha }}
          **Branch**: ${{ github.ref_name }}
          **Triggered by**: ${{ github.actor }}
          **Execution Time**: $(date)
          EOF
          
      # Upload summary
      - name: 📤 Upload summary
        uses: actions/upload-artifact@v4
        with:
          name: test-summary
          path: test-summary.md
          retention-days: 90 

  # Build Allure report from merged results and publish to GitHub Pages
  allure-report:
    name: 📈 Build Allure Report
    runs-on: ubuntu-latest
    needs: [api-tests, ui-tests]
    if: always()
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Setup Java 19
        uses: actions/setup-java@v4
        with:
          java-version: '19'
          distribution: 'temurin'
          cache: 'maven'

      - name: 📥 Download Allure results (API)
        uses: actions/download-artifact@v4
        with:
          name: allure-results-api
          path: allure-merge/api
        continue-on-error: true

      - name: 📥 Download Allure results (UI)
        uses: actions/download-artifact@v4
        with:
          name: allure-results-ui
          path: allure-merge/ui
        continue-on-error: true

      - name: 🔄 Merge Allure results
        run: |
          mkdir -p allure-results
          if [ -d "allure-merge/api" ]; then cp -R allure-merge/api/* allure-results/ || true; fi
          if [ -d "allure-merge/ui" ]; then cp -R allure-merge/ui/* allure-results/ || true; fi
          echo "Merged Allure results:"; ls -la allure-results || true

      - name: 🧱 Build Allure static report
        run: mvn -q allure:report

      - name: 📤 Upload Pages artifact (Allure)
        uses: actions/upload-pages-artifact@v3
        with:
          path: target/site/allure-maven-plugin

  deploy-pages:
    name: 🚀 Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: allure-report
    if: always()
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: 🚀 Deploy
        id: deployment
        uses: actions/deploy-pages@v4